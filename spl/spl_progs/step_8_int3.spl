//Name : Sooraj Tom, 111501036
//Date : 14-09-2017
//Step : 8 Interrupt 3

alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if(sysCallNo == 6) then    //Seek system call
	
	alias Filedesc S2;
	alias i S3;
	alias newseek S4;
	alias softi S5;
	alias fatadd S6;
	alias filesize S7;
	
	newseek = [physicalSP - 3];
	Filedesc = [physicalSP - 4] * 2;
	
	if((Filedesc > 14) || (Filedesc < 0)) then   //Invalid file descriptor
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	i = (PTBR - PAGE_TABLE) / 8;    //Obtaining process id of the calling process
	i = READY_LIST + (32 * i);      //Obtaining the PCB of current process
	i = i + 15;                     //Obtaining per-process open file table

	if([i + Filedesc] == -1) then   //File descriptor is invalid
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	softi = [i + Filedesc];         //Getting the index of the file in sys-wide open file table
	
	fatadd = [FILE_TABLE + (softi * 2)];     //Getting the index of the fat entry
	fatadd = FAT + (fatadd * 8);             //Getting the address of the fat entry
	
	filesize = [fatadd + 1] ;                   //Getting the filesize 
	
	if((newseek >=0 ) && (newseek < filesize))then
		[i + Filedesc + 1] = newseek;       //Setting the new seek position
	else
		[physicalSP - 2] = -1;              //The requested seek position is out of bounds
		ireturn;
	endif;
	
	[physicalSP - 2] = 0;                         //Return with success
	ireturn;
else
	if(sysCallNo == 7) then    //Read system call
		alias Filedesc S2;
		alias i S3;
		alias softi S4;
		alias fatadd S5;
		alias blockno S6;
		alias lseekpos S7;
		alias filesize S8;
		alias Data S9;
		
		Filedesc = [physicalSP - 4] * 2;   //Getting the file name 
		
		i = (PTBR - PAGE_TABLE) / 8;    //Obtaining process id of the calling process
		i = READY_LIST + (32 * i);      //Obtaining the PCB of current process
		i = i + 15;                     //Obtaining per-process open file table

		if([i + Filedesc] == -1) then   //File descriptor is invalid
			[physicalSP - 2] = -1;
			ireturn;
		endif;
		
		softi = [i + Filedesc];                          //Getting the index of the file in sys-wide open file table
		lseekpos = [i + Filedesc + 1];                   //Getting the current seek position
	
		fatadd = [FILE_TABLE + (softi * 2)];             //Getting the index of the fat entry
		fatadd = FAT + (fatadd * 8);                     //Getting the address of the fat entry
		
		filesize = [fatadd + 1];
		blockno = [fatadd + 2];                          //Getting the block number of basic-block of file
		
		if(lseekpos < filesize) then
			load(1, blockno);                            //Loading the file's basic block into scratchpad
			blockno = [SCRATCHPAD + lseekpos / 512];     //The block number corresponding to the lseek position
			load(1, blockno);
			Data = [SCRATCHPAD + lseekpos % 512];        //Obtaining the word at seek position
			[i + Filedesc + 1] = [i + Filedesc + 1] + 1; //Incrementing the lseek of file
		else
			[physicalSP - 2] = -1;                       //The lseek position is at the end of file
			ireturn;
		endif;
		
		[physicalSP - 3] = Data;                         //Pushing the word read
		[physicalSP - 2] = 0;                            //Return with success
		ireturn;
	endif;
endif;
