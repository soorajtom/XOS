//Name : Sooraj Tom, 111501036
//Date : 07-09-2017
//Step : 8 Interrupt 1 

alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if ( sysCallNo == 1) then
	alias Filename S2;
	Filename = [physicalSP - 3];
	
	alias freeblock S3;
	alias i S4;
	alias j S5;
	i = FAT;
	
	//Searching if the file with that name already exists
	while(i < (FAT + 512)) do
		if(Filename == [i]) then
			[physicalSP - 2] = 0;
			ireturn;
		endif;
		i = i + 8;
	endwhile;
	
	//Searching disk-free list for a free block
	i = DISK_LIST + 23;
	while( i < (DISK_LIST + 448)) do
		if([i] == 0)then
			break;
		endif;
		i = i + 1;
	endwhile;
	
	//If no blocks are free,
	if ( i == DISK_LIST + 448) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	i = i - DISK_LIST;            //Now i contains the index of the free block
	
	freeblock = FAT;
	while([freeblock + 2] != -1) do
		freeblock = freeblock + 8;
		if (freeblock >= FAT + 512) then
			[physicalSP - 2] = -1;
			ireturn;
		endif;
	endwhile;
	
	//Searching the basic block of the free block
	if([freeblock + 2] != -1) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	[freeblock] = Filename;   //Setting the filename field with the filename parameter
	[freeblock + 1] = 0;      //Setting filesize as 0
	[freeblock + 2] = i;      //Setting the basic block
	
	load(1, i);               //Loading the basic block to scratchpad
	
	//Setting all entries in Scratchpad to -1
	
	j = 512;
	while(j < 1024) do
		[j] = -1;
		j = j + 1;
	endwhile;
	
	store(1, i);
	[DISK_LIST + i] = 1;      //Setting 1 in disk free list
	
	store(5, 19);            //Storing FAT back into disk
	store(6, 20);            //Storing disk-free list back into disk
	
	[physicalSP - 2] = 0;    //Setting return value as 0
else 
	if (sysCallNo == 4) then              //Delete system call
		alias Filename S2;
		alias i S3;
		alias fatentry S4;
		alias blockno S5;
		alias j S6;
		
		Filename = [physicalSP - 3];
		i = FAT;
	
		//Searching if the file with that name exists
		while(i < (FAT + 512)) do
			if(Filename == [i]) then
				break;
			endif;
			i = i + 8;
		endwhile;
		
		if (i >= (FAT + 512)) then     //A file in that name does not exist
			[physicalSP - 2] = -1;
			ireturn;
		endif;
		
		fatentry = i;          		//Now fatentry contains the address of the FAT entry corresponding to the file
		
		i = FILE_TABLE;
	
		while( i < (FILE_TABLE + 128)) do
			if([i] == fatentry) then                    //Found the file open
				[physicalSP - 2] = -1;
				ireturn;
			endif;
			i = i + 2;
		endwhile;
		
		blockno = 0;
		
		j = 0;
		while(j < 256)do
			load(1, [fatentry + 2]);             //loading the basic block to scratchpad
			blockno = [512 + j];                 //Choosing jth data block
			if(blockno > 0)then
				load(1, blockno);                    //Loading the data block into scratchpad
				i = 512;
				while(i < 1024 )do
					[i] = "";                        //Clearing the block currently in scratch pad
					i = i + 1;
				endwhile;
				store(1, blockno);
				[DISK_LIST + blockno] = 0;           //Clearing the disk-free list entry for the block
			endif;
			j = j + 1;
		endwhile;
		
		blockno = [fatentry + 2];
		load(1, blockno);
		i = 512;
		while(i < 1024 )do
			[i] = "";                        //Clearing the basic block currently in scratch pad
			i = i + 1;
		endwhile;
		store(1,blockno);
		[DISK_LIST + blockno] = 0;           //Clearing the disk-free list entry for the block
		
		[fatentry] = -1;                     //Setting file name as invalid
		[fatentry + 2] = -1;                 //Setting basic block as invalid
		
		store(5, 19);            //Storing FAT back into disk
		store(6, 20);            //Storing disk-free list back into disk
	
		[physicalSP - 2] = 0;    //Setting return value as 0
		
	endif;
endif;

ireturn;








